
<template>

    <view class="containers">
    	<!--
	    <view class="img" @tab="changeimg">
	   <image src="http://os11g3fl4.bkt.clouddn.com/WechatIMG12.jpeg"> </image>
	   	</view>
-->
   <!--照片上传区域-->
  
        <view class="head">无界，穿越就是视界
        </view>


      <view class="content">
          <view class="photo-box column-center" >
                  <image class="photo-box-img" src="{{pic}}"></image>
          </view>
    

      </view>
        <view class="problem">
        <navigator  url="/pages/problems">
       <view class="title">常见问题</view></navigator>
       </view>

  		</view>
 
</template>
<script>
import wepy from 'wepy';
import api from '../api/api';
import tip from '../utils/tip'
import Tips from '../utils/Tips';

import Tab from '../components/tab'
import Discover from '../components/discover'
import Bombscreen from '../components/bomb_screen'
import OrderItem from '../components/order_item'
import BottomLoadMore from "../components/common/bottomLoadMore"
import Placeholder from "../components/common/placeholder"
import 'wepy-async-function'
import ImageUploader from '../components/common/image_uploader'
import WxUtils from '../utils/WxUtils';

import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO,
  USER_INFO,
  USER_CODE
} from '../utils/constant';

export default class create_confirm extends wepy.page {

	 def = {
      input: {
        status: true
      },
      details: [],
      pictures: [{url:'http://os11g3fl4.bkt.clouddn.com/WechatIMG12.jpeg'}],
      skuList: [{
        sku: '',
        price: '',
        stock: ''
      }],
      mode: 'create',
      pic: null,
      goodsId: null,
      innerCategories: [],
      init: false,
      isInnerDisplay: 'false'
    };
    data = {...this.def};

  config = {
    navigationBarTitleText: '无界',
  };
  components = {
    discover: Discover,
    bottomLoadMore: BottomLoadMore,
    placeholder: Placeholder,
    bombscreen: Bombscreen,
    tab: Tab,
    orderItem: OrderItem,
    ImageUploader: ImageUploader,
  };
 

   async createChannel(pictures,name,intro) {
        let that = this;
        let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
        let openId = userSpecialInfo.openid;
        console.log("openid:--"+openId);
        console.log("pictures:--"+JSON.stringify(pictures));
        console.log("name:--"+name);
        console.log("intro:--"+intro);


        const data = {
          goodsDetails: [],
          goodsSkuInfo: {},
          goodsStocks: [],
          images: []
        };
        tip.loading('保存中');
        // 处理图片信息
        for (let picture of pictures) {
          if (picture.url.substring(0, 6) == 'wxfile' || picture.url.substring(0, 11) == 'http://tmp/') {
          	   const url = `${this.baseUrl}/images`;
			    // const param = {
			    //   url,
			    //   filePath,
			    //   name: 'image'
			    // };

            const result = await api.image(picture.url);
            console.log("return img"+JSON.stringify(result));
            const image = JSON.parse(result.data);
            console.log("return image"+JSON.stringify(image));

            picture=image.data;
            console.log("picture"+picture);
            that.orgImage=picture
          } else {
            that.orgImage=picture
          }
        }
        tip.loading('保存中', true);


        const json = await api.createChannel({
          query: {
            createUserOpenid: openId,
            imgPath:that.orgImage,
            name:name,
            intro:intro
          }
        });

        if (json.data.code == 0) {
          // that.list = json.data.list;
          wepy.navigateBack();
          console.log("绑定成功.....");

          that.$apply();
        } else {
          tip.error(json.data.msg)
        }
        that.showLoading = false;
      }



   // 加载项
  onLoad(options) {

    console.log(options);
    this.pic=options.picture;

  }

 computed = {

  }

  methods = {
      formSubmit(e) {
      let that = this;
      let picture=that.pictures;
      let name = e.detail.value.name;
      let intro = e.detail.value.intro;
      if (name == "") {
        tip.alert("请输入频道名称");
        return false;
      }
      if (intro == "") {
        tip.alert("请输入频道介绍");
        return false;
      }
      that.createChannel(picture,name,intro);
      console.log('form发生了submit事件，携带数据为：', e.detail.value)
    },


    // 上传照片
      async photo() {
        const size = this.pictures.length;
        if (size >= 2) {
          await Tips.alert('最多选择五张图片');
          return;
        }
        const param = {
          count: 2 - size,
          sizeType: ['compressed']
        };
        const tempFilePaths = await WxUtils.chooseImage(param, this.maxSize);
        const pictures = tempFilePaths.map(item => {
          return {
            temp: true,
            url: item
          }
        });
     

    //    this.pictures = this.pictures.concat(pictures);
        this.pictures = pictures;
        this.$apply();

            const size2 = this.pictures.length;
                  console.log(size2);
        if (size2 <1) {
          await Tips.alert('请选择图片');
          return;
        }

        tip.loading('保存中');
        // 处理图片信息
        for (let picture of pictures) {
          if (picture.url.substring(0, 6) == 'wxfile' || picture.url.substring(0, 11) == 'http://tmp/') {
               const url = `${this.baseUrl}/images`;
    

            const result = await api.image(picture.url);
            console.log("return img"+JSON.stringify(result));
            const image = JSON.parse(result.data);
            console.log("return image"+JSON.stringify(image));
            picture=image.data;

            setTimeout(() => {
              //上传成功 关闭loadding 跳转到确认页面
              tip.loaded();
              wepy.navigateTo({
                url: "/pages/create_confirm?picture="+picture
              })
            }, 2000)

            console.log("picture"+picture);
            that.orgImage=picture
          } else {
            that.orgImage=picture
          }
        }
        tip.loading('保存中', true);
      },


  }

  events = {
	}


}
</script>
<style lang="scss">
  @import "../styles/variable";

.containers {
    position: fixed;
		height: 100%;
		width: 100%;
		display: flex;
    justify-content: flex-start;  
    flex-direction:column;
    .head{
      margin:30rpx 0;
      width:100%;
      text-align:center;
      font-size:35rpx;
    }
    /*
    .bg-blur {
            float: left;
            width: 100%;
            background-repeat: no-repeat;
            background-position: center;
            background-size: cover;
            -webkit-filter: blur(2px);
            -moz-filter: blur(2px);
            -o-filter: blur(2px);
            -ms-filter: blur(2px);
            filter: blur(2px);
        }
        */

      .content{
         height: 320px;
         width:100%;
         background-color: #ffffff;
         text-align:center;
         display: flex;
         justify-content: center;  

      }

  .photo-box{
    height: 320px;
    width:80%;
    background-color: #111111;
    background-size: 420px;
    text-align:center
  }


  .photo-box-img{
    height: 320px;
    width:100%;
    background-color: 000000;
    background-size: 420px;
  }

    .btn{
      position:absolute;
        text-align: center;
        margin-top:300rpx;
    }
    .photo-btn{
      height: 75px;
      width: 75px;
      

    }

		background-color:#ffffff;
		.item{
				display:flex;
				height:100%;
				width:100%;
				align-items:center;/*垂直居中*/

			}



    .problem{
      display:flex;
      justify-content:center;
      bottom:30rpx;
      width:100%;
      align-self:flex-end;
      position: fixed;
      }
    .title{
      font-size:30rpx;

    }
}

</style>
